INCLUDE "./src/include/hardware.inc"

    IF !DEF(DEFINITIONS_INC)
DEF DEFINITIONS_INC EQU 1

/*************************************************Stage*************************************************/
DEF MAX_MAP_SIZE EQU $0100

DEF MAX_STAGES EQU 6

DEF STAGE_LOCKED EQU $00
DEF STAGE_UNLOCKED_NOT_CLEARED EQU $01
DEF STAGE_UNLOCKED_CLEARED EQU $02

/*************************************************Lose Reason*************************************************/
DEF LOSE_REASON_TIME EQU 0
DEF LOSE_REASON_HP EQU 1

/*************************************************Viewport*************************************************/
DEF GAMEPLAY_UI_SIZE_Y EQU 8*1
DEF VIEWPORT_SIZE_Y EQU SCRN_Y - GAMEPLAY_UI_SIZE_Y
DEF VIEWPORT_SIZE_X EQU SCRN_X
DEF SCREEN_UPPER_OFFSET_Y EQU 8
DEF SCREEN_LEFT_OFFSET_X EQU 8

DEF PAUSE_UI_SIZE_Y EQU 8*5
DEF PAUSE_VIEWPORT_SIZE_Y EQU SCRN_Y - PAUSE_UI_SIZE_Y

/*************************************************Player*************************************************/
; PLAYER Stats
DEF PLAYER_BULLET_NUMBER EQU 3
DEF BULLET_DAMAGE EQU 1 ; TEMP VARIABLE
DEF BULLET_POWER_UP_DAMAGE EQU 2
DEF PLAYER_HEALTH EQU 3
DEF FIRE_RATE_UPDATE_SPEED EQU 35 ; amt to add to the fraction part
DEF FIRE_RATE EQU 3 ; amt to hit before can fire again
DEF PLAYER_ANIMATION_UPDATE_SPEED EQU $10

DEF INPUT_TIME EQU 1
DEF INPUT_UPDATE_SPEED EQU 150

; For Animation Frames
DEF PLAYER_WALK_FRAMES EQU 2

/*************************************************Enemies*************************************************/
DEF TYPE_ENEMYA EQU 0  ; bit 2, 3 & 4, %000 000 00
DEF TYPE_ENEMYA_MOV EQU 4 ; bit 2, 3 & 4, %000 001 00
DEF TYPE_ENEMYB EQU 8 ; bit 2, 3 & 4, %000 010 00
DEF TYPE_ENEMYC EQU 12 ; bit 2, 3 & 4, %000 011 00
DEF TYPE_ENEMYD EQU 16 ; bit 2, 3 & 4, %000 100 00
DEF TYPE_ENEMY_BOSS EQU 20 ; bit 2, 3 & 4, %000 101 00

DEF ENEMY_BULLET_NUM EQU 10

; Enemy A Stats
DEF ENEMY_TYPEA_HEALTH EQU 3
DEF ENEMY_TYPEA_WALK_FRAMES EQU 2
DEF ENEMY_TYPEA_ATTACK_ANIM_MAX_FRAMES EQU 2
DEF ENEMY_TYPEA_ANIMATION_UPDATE_SPEED EQU $0A ; X frames for next animation frame, abt 4fps
DEF ENEMY_TYPEA_ATTACK_STATE_FRAME EQU 3 ; frame to start playing attack anim, MUST BE ODD NUMBER
DEF ENEMY_TYPEA_ATTACK_FRAME EQU ENEMY_TYPEA_ATTACK_STATE_FRAME + 1 ; frame to shoot

; Enemy B Stats
DEF ENEMY_TYPEB_HEALTH EQU 6
DEF ENEMY_TYPEB_ANIMATION_UPDATE_SPEED EQU $10
; attack duration = ENEMY_TYPEB_ATTACK_STATE_STOP_FRAME - ENEMY_TYPEB_ATTACK_STATE_FRAME
; as long frame >= ENEMY_TYPEB_ATTACK_STATE_FRAME, its attack state
DEF ENEMY_TYPEB_WALK_MAX_FRAMES EQU 2
DEF ENEMY_TYPEB_ATTACK_ANIM_MAX_FRAMES EQU 2
DEF ENEMY_TYPEB_CHARGE_ANIM_MAX_FRAMES EQU 2
DEF ENEMY_TYPEB_ATTACK_STATE_FRAME EQU 3 ; frame to go attack state after enemy senses player on same line
DEF ENEMY_TYPEB_ATTACK_STATE_STOP_FRAME EQU 12; frame to stop attack state. 
DEF ENEMY_TYPEB_REST_STATE_FRAME EQU 6 ; number of frames to rest after attack state
DEF ENEMY_TYPEB_CHARGE_ANIM_STATE_FRAME EQU ENEMY_TYPEB_ATTACK_STATE_FRAME - ENEMY_TYPEB_CHARGE_ANIM_MAX_FRAMES

; Enemy C Stats
DEF ENEMY_TYPEC_HEALTH EQU 5
DEF ENEMY_TYPEC_ANIMATION_UPDATE_SPEED EQU $10
DEF ENEMY_TYPEC_NORMAL_STATE_MAX_FRAME EQU 2
DEF ENEMY_TYPEC_ATTACK_STATE_MAX_FRAME EQU 6
DEF ENEMY_TYPEC_ATTACK_STATE_FRAME EQU 3
DEF ENEMY_TYPEC_GO_BACK_IDLE_FRAME EQU ENEMY_TYPEC_ATTACK_STATE_FRAME + ENEMY_TYPEC_ATTACK_STATE_MAX_FRAME
DEF ENEMY_TYPEC_SHOOT_FRAME EQU ENEMY_TYPEC_ATTACK_STATE_FRAME + 3 ; frame to shoot

; Enemy D Stats
; wake up duration = ENEMY_TYPED_CHASE_STATE_FRAME - ENEMY_TYPED_WAKEUP_STATE_FRAME
; sleep state is < ENEMY_TYPED_WAKEUP_STATE_FRAME
DEF ENEMY_TYPED_HEALTH EQU 4
DEF ENEMY_TYPED_ANIMATION_UPDATE_SPEED EQU $10
DEF ENEMY_TYPED_CHASE_STATE_FRAME EQU 7 ; frame to indicate chase state
DEF ENEMY_TYPED_WAKEUP_STATE_FRAME EQU 4 ; frame to indicate wake up state WARNING, BEST TO HAVE IT MORE THAN 2 TO FIX SOME ISSUES
DEF ENEMY_TYPED_ANIMATION_MAX_FRAME EQU 2 ; max animation frame for type D
DEF ENEMY_TYPED_ANIMATION_FRAMES EQU 2

; Enemy Boss
DEF ENEMY_BOSS_HEALTH EQU 20
DEF ENEMY_BOSS_ANIMATION_UPDATE_SPEED EQU $10
DEF ENEMY_BOSS_HEALTH_BERSERK EQU 12
DEF ENEMY_BOSS_DEFAULT_SHOOT_FRAME EQU 9

DEF ENEMY_BOSS_DEFAULT_SHOOT_FLASH EQU 4
DEF ENEMY_BOSS_DEFAULT_SHOOT_ANIM EQU ENEMY_BOSS_DEFAULT_SHOOT_FRAME - ENEMY_BOSS_DEFAULT_SHOOT_FLASH

DEF ENEMY_BOSS_RAM_NO_TIMES EQU 4
DEF ENEMY_BOSS_STATES_CHARGE EQU 1
DEF ENEMY_BOSS_PROJECTILE_BARRAGE_NO_TIME EQU 2
DEF ENEMY_BOSS_STATES_PROJECTILE_BARRAGE EQU ENEMY_BOSS_STATES_CHARGE + ENEMY_BOSS_RAM_NO_TIMES
DEF ENEMY_BOSS_RESET_BERSERK EQU ENEMY_BOSS_STATES_PROJECTILE_BARRAGE + ENEMY_BOSS_PROJECTILE_BARRAGE_NO_TIME

DEF ENEMY_BOSS_START_RAM_FRAME EQU 4 ; amt of 'charging time'
DEF ENEMY_BOSS_RAM_FRAME_INTERVAL EQU 3 ; next amt of charging time
DEF ENEMY_BOSS_RESET_RAM_FRAME EQU ENEMY_BOSS_START_RAM_FRAME - ENEMY_BOSS_RAM_FRAME_INTERVAL
DEF ENEMY_BOSS_STOP_DIST_OFFSET EQU 8*1 ; have an offset so it goes slightly beyond player's position

DEF ENEMY_BOSS_BARRAGE_SHOOT_FRAME EQU 5
DEF ENEMY_BOSS_BARRAGE_SHOOT_INTERVAL EQU 3
DEF ENEMY_BOSS_BARRAGE_SHOOT_FRAME_RESET EQU ENEMY_BOSS_BARRAGE_SHOOT_FRAME - ENEMY_BOSS_BARRAGE_SHOOT_INTERVAL

/*************************************************Bullet*************************************************/
; MUST be in order declared in textures.asm for the projectile section
DEF TYPE_BULLET_DEFAULT EQU 0 ; bit 2, 3 & 4, %000 000 00
DEF TYPE_BULLET_POWER_UP EQU 4 ; bit 2, 3 & 4, %000 001 00
DEF TYPE_BULLET_SPIKE EQU 8 ; bit 2, 3 & 4, %000 010 00
DEF TYPE_BULLET_INK EQU 12 ; bit 2, 3 & 4, %000 011 00
; projectiles that are 4x4 tiles wide below
DEF TYPE_BULLET_WIND EQU 16 ; bit 2, 3 & 4, %000 100 00

/*************************************************Particle Effects*************************************************/
DEF FLAG_PARTICLE_EFFECT_ANIMATION EQU $02 ; bit 1, %0000 00 1 0
DEF TYPE_PARTICLE_DESTROY_BLOCK EQU 0 ; bit 2, 3 & 4, %000 000 00
DEF TYPE_PARTICLE_DESTROY_POWER_COLLISION EQU 4 ; bit 2, 3 & 4, %000 001 00
; particle effects with animation below here
DEF TYPE_PARTICLE_KILL_ENEMY EQU 8 ; bit 2, 3 & 4, %000 010 00
DEF TYPE_PARTICLE_POWER_KILL_ENEMY EQU 12 ; bit 2, 3 & 4, %000 011 00

DEF PARTICLE_UPDATE_FRAME_TIME EQU $10
DEF TILE_DESTRUCTION_TIME EQU 1
DEF PARTICLE_KILL_ENEMY_ALIVE_TIME EQU 3
DEF PARTICLE_POWER_KILL_ENEMY_ALIVE_TIME EQU 6
DEF PARTICLE_KILL_PLAYER_ALIVE_TIME EQU 6

DEF PARTICLE_KILL_ENEMY_MAX_FRAMES EQU 2
DEF PARTICLE_POWER_KILL_ENEMY_MAX_FRAMES EQU 3

/*************************************************Flicker Effects*************************************************/
; Effect Type
DEF FLICKER_EFFECT_FLAG EQU 4 ; bit 2, 3 & 4, %000 001 00

DEF FLICKER_BITMASK EQU %00000001 ; the multiple we want to compare
DEF FLICKER_VALUE EQU 1 ; value to not render
DEF PLAYER_FLICKER_UPDATE_SPEED EQU 35 ; 256/FLICKER_UPDATE_SPEED number of frames to stop flicker effect
DEF PLAYER_FLICKER_SLOW_UPDATE_SPEED EQU 15
DEF ENEMY_FLICKER_UPDATE_SPEED EQU 40

; Damage flicker effect
DEF DAMAGE_FLICKER_EFFECT EQU 5 ; number of times to do the flicker effect based on the flicker timer

/*************************************************Power-Ups*************************************************/
DEF TYPE_NO_POWERUP EQU 0 ; equ 0 means no powerup at all
DEF TYPE_INVINCIBILITY_POWERUP EQU 4 ; bit 2, 3 & 4, %000 001 00
DEF TYPE_TIME_POWERUP EQU 8 ; bit 2, 3 & 4, %000 010 00
DEF TYPE_DAMAGE_POWERUP EQU 12 ; bit 2, 3 & 4, %000 011 00
DEF TYPE_SPEED_POWERUP EQU 16 ; bit 2, 3 & 4, %000 100 00
DEF TYPE_HEALTH_POWERUP EQU 20 ; bit 2, 3 & 4, %000 101 00

; power up sprite ID
DEF HEART_POWERUP_SPRITE_ID EQU $84
DEF INVINCIBILITY_POWERUP_SPRITE_ID EQU $80
DEF TIME_POWERUP_SPRITE_ID EQU $82
DEF SPEED_POWERUP_SPRITE_ID EQU $86
DEF DAMAGE_POWERUP_SPRITE_ID EQU $88

; Power-Up Effects
; formula: number of times updated in 1s = 60frames / (256 / POWER_UP_FLICKER_UPDATE_SPEED)
; POWER_UP_FLICKER_EFFECT time in seconds = number of times updated in 1s * time wanted
DEF INVINCIBILITY_POWER_UP_TIME EQU 5 ; in seconds
DEF INVINCIBILITY_SLOW_DOWN_FLICKER_TIME EQU 2 ; in seconds, indicate when to slow down the flicker effect
DEF INVINCIBILITY_UPDATE_SPEED EQU 30 ; number per frame
DEF INVINCIBILITY_POWER_UP_EFFECT EQU 60/(256/INVINCIBILITY_UPDATE_SPEED) * INVINCIBILITY_POWER_UP_TIME
DEF INVINCIBILITY_POWER_UP_FLICKER_SLOW_EFFECT EQU 60/(256/INVINCIBILITY_UPDATE_SPEED) * INVINCIBILITY_SLOW_DOWN_FLICKER_TIME

DEF SPEED_POWER_UP_TIME EQU 6 ; in seconds
DEF SPEED_POWER_UP_SLOW_ANIM_TIME EQU 2
DEF SPEED_POWER_UP_UPDATE_SPEED EQU 30
DEF SPEED_POWER_UP_EFFECT EQU 60/(256/PLAYER_FLICKER_UPDATE_SPEED) * SPEED_POWER_UP_TIME
DEF SPEED_POWER_UP_SLOW_ANIM_EFFECT EQU 60/(256/PLAYER_FLICKER_UPDATE_SPEED) * SPEED_POWER_UP_SLOW_ANIM_TIME

DEF DAMAGE_INVINCIBILITY_TIME EQU 2 ; in seconds
DEF DAMAGE_INVINCIBILITY_UPDATE_SPEED EQU 30
DEF DAMAGE_INVINCIBILITY_EFFECT EQU 60/(256/DAMAGE_INVINCIBILITY_UPDATE_SPEED) * DAMAGE_INVINCIBILITY_TIME

DEF BULLET_POWER_UP_NUMBER EQU 3 ; give x number of power up bullets to player
DEF TIMER_POWER_UP_INC_AMT EQU 10 ; in seconds

/*************************************************Collision*************************************************/
DEF PLAYER_COLLIDER_SIZE EQU $08
DEF PLAYER_ENEMY_COLLIDER_SIZE EQU $04
DEF ENEMY_COLLIDER_SIZE EQU $01
DEF BOSS_COLLIDER_SIZE EQU $10
DEF ENEMY_BULLET_COLLIDER_SIZE EQU $08 ; hit box for enemy vs bullet
DEF BOSS_ENEMY_COLLIDER_SIZE EQU $10
DEF BULLET_COLLIDER_SIZE EQU $02
DEF POWERUP_COLLIDER_SIZE EQU $02

; States
DEF FLAG_INACTIVE EQU $00
DEF FLAG_ACTIVE EQU $01

DEF FLAG_PLAYER EQU $00 ; bit 1, %0000 00 0 0
DEF FLAG_ENEMY EQU $02  ; bit 1, %0000 00 1 0

; definitions for the bit flags
DEF BIT_FLAG_ACTIVE EQU $0 ; 0 bit
DEF BIT_FLAG_PLAYER EQU $1 ; 1 bit

DEF BIT_MASK_TYPE EQU %11111100 ; to do bit masking for power up type/enemy type
DEF BIT_MASK_TYPE_REMOVE EQU %00000011

/*************************************************Direction*************************************************/
; can use cp to compare, takes reg A, but takes only 1 cycle and 1 byte
DEF DIR_UP EQU 0
DEF DIR_DOWN EQU 1
DEF DIR_LEFT EQU 2
DEF DIR_RIGHT EQU 3
DEF DIR_BIT_MASK EQU %00000011
DEF DIR_BIT_MASK_RMV EQU %11111100

/*************************************************Shoot Direction*************************************************/
; Shoot directions, use bit to compare
; for when the direction of shooting is different with direction entity is facing
DEF SHOOT_DIR_UP EQU %00010000 ; bit 4 true
DEF SHOOT_DIR_DOWN EQU %00100000 ; bit 5 tru
DEF SHOOT_DIR_LEFT EQU %01000000 ; bit 6 true
DEF SHOOT_DIR_RIGHT EQU %10000000 ; bit 7 true
DEF SHOOT_DIR_BIT_MASK EQU %11110000

DEF BIT_SHOOT_UP_CMP EQU 4 
DEF BIT_SHOOT_DOWN_CMP EQU 5
DEF BIT_SHOOT_LEFT_CMP EQU 6
DEF BIT_SHOOT_RIGHT_CMP EQU 7

/*************************************************Velocity*************************************************/
DEF VELOCITY_NIL EQU $0000
DEF VELOCITY_VSLOW EQU $0040
DEF VELOCITY_SLOW EQU $0080
DEF VELOCITY_SLIGHTLY_SLOW EQU $00C0
DEF VELOCITY_NORMAL EQU $0100
DEF VELOCITY_FAST EQU $0200
DEF VELOCITY_VFAST EQU $0400

DEF PLAYER_DEFAULT_VELOCITY EQU VELOCITY_SLIGHTLY_SLOW
DEF PLAYER_INCREASED_VELOCITY EQU VELOCITY_NORMAL
DEF BULLET_VELOCITY EQU $02 ; VELOCITY_FAST
DEF ENEMY_BOSS_RAM_SPEED EQU $02 ; VELOCITY_FAST

DEF ENEMY_TYPEA_VELOCITY EQU VELOCITY_VSLOW
DEF ENEMY_TYPEB_VELOCITY EQU VELOCITY_VSLOW
DEF ENEMY_TYPEC_VELOCITY EQU VELOCITY_VSLOW
DEF ENEMY_TYPED_VELOCITY EQU VELOCITY_SLOW

/*************************************************Map Size*************************************************/
DEF LEVEL0_MAP_SIZE_Y EQU $00B8
DEF LEVEL0_MAP_SIZE_X EQU $00D8

DEF LEVEL1_MAP_SIZE_Y EQU $00D8
DEF LEVEL1_MAP_SIZE_X EQU $00E8

DEF LEVEL2_MAP_SIZE_Y EQU $00D0
DEF LEVEL2_MAP_SIZE_X EQU $0100

DEF LEVEL3_MAP_SIZE_Y EQU $0100
DEF LEVEL3_MAP_SIZE_X EQU $0100

DEF LEVEL4_MAP_SIZE_Y EQU $0100
DEF LEVEL4_MAP_SIZE_X EQU $0100

DEF LEVELXX_MAP_SIZE_Y EQU $00D0
DEF LEVELXX_MAP_SIZE_X EQU $00D8

/*************************************************Game Win/Lose States*************************************************/
DEF GAME_END EQU 1
DEF GAME_END_TIME EQU 2

INCLUDE "./src/definitions/tile_definitions.inc"

ENDC ; DEFINITIONS_INC